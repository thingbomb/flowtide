---
interface Props {
  href?: string;
  target?: string;
  rel?: string;
  variant?: string;
  id?: string;
  disabled?: boolean;
  "full-width"?: boolean;
  "data-url"?: string;
}
const {
  href,
  target,
  rel,
  variant,
  id,
  disabled,
  "full-width": fullWidth,
  "data-url": dataUrl,
} = Astro.props as Props;
---

{
  href ? (
    <a
      href={href}
      target={target}
      rel={rel}
      id={id}
      class={`inline-block ${fullWidth ? "w-full " : ""}rounded-lg ${variant == "outline" ? "border border-[rgba(250,250,250,0.1)] hover:bg-[rgba(250,250,250,0.1)] text-white" : "bg-white text-black hover:bg-[rgba(250,250,250,0.9)]"} px-4 py-2 transition-all text-sm font-medium`}
    >
      <slot />
    </a>
  ) : (
    <button
      id={id}
      disabled={disabled}
      data-url={dataUrl}
      class={`inline-block ${Astro.props["full-width"] ? "w-full " : ""}rounded-lg ${variant == "outline" ? "border border-[rgba(250,250,250,0.1)] hover:bg-[rgba(250,250,250,0.1)] text-white" : "bg-white text-black hover:bg-[rgba(250,250,250,0.9)]"} px-4 py-2 transition-all text-sm font-medium disabled:opacity-40 disabled:hover:bg-white disabled:cursor-not-allowed`}
    >
      <slot />
    </button>
  )
}
